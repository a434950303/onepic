<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop
       					http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <!-- 开启controller注解支持 -->
    <!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.ykkj.*" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<mvc:annotation-driven>
		<!-- 2015年11月7日  张晓东  解决Spring MVC @ResponseBody返回中文字符串乱码问题,因为spring mvc使用的默认处理字符串编码为ISO-8859-1 -->
		<mvc:message-converters register-defaults="true">
		    <bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
		    </bean>
   		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 配置spring mvc 不拦截目录 -->
	<mvc:resources location="/static/" mapping="/static/**"/>
	<mvc:resources location="/page/" mapping="/page/**"/>
	<mvc:resources location="/fileuploader/" mapping="/fileuploader/**"/>
	<mvc:resources location="/apk/" mapping="/apk/**"/>
	<!--<mvc:resources location="/upload/" mapping="/upload/**"/>
	<mvc:resources location="/preview/" mapping="/preview/**"/>
	<mvc:resources location="/root/" mapping="/root/**"/>
	<mvc:resources location="/static/" mapping="/static/**"/>
	<mvc:resources location="/opusres/" mapping="/opusres/**"/>
	<mvc:resources location="/staticpage/" mapping="/staticpage/**"/>
	<mvc:resources location="/" mapping="/server.json"/>-->
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1"/> 
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/staticpage/longsinglepage.html"/>
	
	<!--<aop:aspectj-autoproxy />-->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 注入获取spring容器的工具类 -->
	<bean id="springContextUtil" class="com.ykkj.weiyi.util.SpringContextUtil"></bean>

	<!-- 家庭医生拦截器 -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/userFamily/*"/>
			<bean class="com.ykkj.weiyi.common.FamilyUInterceptor" /> 
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/doctorFamily/*"/>
			<bean class="com.ykkj.weiyi.common.FamilyDInterceptor" /> 
		</mvc:interceptor>
	</mvc:interceptors> -->
</beans>